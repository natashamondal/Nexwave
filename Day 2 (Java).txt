public class Employee {
	float salary=40000;

}
class Programmer extends Employee{
	int bonus=10000;
	public static void main(String args[]) {
		Programmer p=new Programmer();
		System.out.println("Programmer salary is :"+p.salary);
		System.out.println("Bonus of Programmer is :"+p.bonus);
	}
}

Output:

Programmer salary is :40000.0
Bonus of Programmer is :10000



class Animal{  
void eat(){
System.out.println("eating...");
}  
}  
class Dog extends Animal{  
void bark(){
System.out.println("barking...");
}  
}  
class TestInheritance{  
public static void main(String args[]){  
Dog d=new Dog();  
d.bark();  
d.eat();  
}
}  

Output:

barking...
eating...


class Animal{  
void eat(){
System.out.println("eating...");
}  
}  
class Dog extends Animal{  
void bark(){
System.out.println("barking...");
}  
}  
class BabyDog extends Dog{  
void weep(){
System.out.println("weeping...");
}  
}  
class TestInheritance2{  
public static void main(String args[]){  
BabyDog d=new BabyDog();  
d.weep();  
d.bark();  
d.eat();  
}
}  


Output:

weeping...
barking...
eating...



class Adder{
	static int add(int a, int b) {return a+b;}
	static int add(int a,int b,int c) {return a+b+c;}
}
public class TestOverloading {
	public static void main(String args[]) {
		System.out.println(Adder.add(11, 11));
		System.out.println(Adder.add(11, 11, 11));
	}

}

Output:
22
33


class TestOverloading1{  
public static void main(String[] args){System.out.println("main with String[]");}  
public static void main(String args){System.out.println("main with String");}  
public static void main(){System.out.println("main without args");}  
}  


class Vehicle{  
  void run(){System.out.println("Vehicle is running");}  
}    
class Bike extends Vehicle{  
  public static void main(String args[]){   
  Bike obj = new Bike();   
  obj.run();  
  }  
}  

Output:
Vehicle is running


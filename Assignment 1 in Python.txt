Assignment 1:
Join 2 device ids lists below(list1 & list2) and separate any duplicates possibly in the joined list.
Ask user to enter device id using input function.
Next search the joined list and print the index position and value of a desired item found in the list if it exists. If the desired item is not found in the list, print the index and value of the next highest value in the list if one exists.
Use the starter lists shown below in your program:
list1=[1,3,5,16,8]
list2=[6,5,9,4,13,12]

Perform three searches and show the results for each search.
Search #1 - search for the value 2
Search #2 - search for the value 12
Search #3 - search for the value 17

code:
'''
procedural program
'''
L1 = [1, 3, 5, 16, 8]
L2 = [6, 5, 9, 4, 13, 12]

L3 = L1+L2
S = set(L3)
L4 = list(S)
L4.sort()

while True:
    in_val = input('Enter Device ID:')
    in_val = int(in_val)
    if in_val in L4:
        print('Device ID found! ID =', in_val, 'and its index is = ', L4.index(in_val))
    elif in_val > max(L4):
        print('Not Found')
    else:
        for i in L4:
            if i > in_val:
                print('Not found, The next highest value is ', i, 'and its index is', L4.index(i))
                break
    ch = input('Do you want to quit? (y/n):')
    if ch == 'y':
        break

Output:
"C:\Python Training\myvenv1\Scripts\python.exe" "C:/Python Training/bin/assignment1_prog.py"
Enter Device ID:2
Not found, The next highest value is  3 and its index is 1
Do you want to quit? (y/n):n
Enter Device ID:12
Device ID found! ID = 12 and its index is =  7
Do you want to quit? (y/n):n
Enter Device ID:17
Not Found
Do you want to quit? (y/n):y

Process finished with exit code 0




'''
functional program
passing the id and list as arguments

in python console:
>>> L = [10, 20, 30]
>>> dev_id_search(20, L)
' Device ID found, Dev ID = 20 Index = 1'
>>> dev_id_search(20)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: dev_id_search() missing 1 required positional argument: 'dev_list'


'''

def dev_id_search(dev_id, dev_list):
    if dev_id in dev_list:
        return ' Device ID found, Dev ID = ' + str(dev_id) + ' Index = ' + str(dev_list.index(dev_id))
    elif dev_id > max(dev_list):
        return 'Not Found'
    else:
        for i in dev_list:
            if i > dev_id:
                return ' Value = ' + str(i) + ' Index = ' + str(dev_list.index(i))

def main():
    L1 = [1, 3, 5, 16, 8]
    L2 = [6, 5, 9, 4, 13, 12]

    L3 = L1 + L2
    S = set(L3)
    L4 = list(S)
    L4.sort()

    while True:
        i = input('Enter Device ID to search:')
        i = eval(i)
        r = dev_id_search(i, L4)
        print('Search result =', r)
        ch = input('Quit? (y/n):')
        if ch == 'y':
            break

if __name__ == '__main__':
    #main()
    import doctest
    doctest.testmod() # testmod will test the docstring

In Python console:

PyDev console: starting.
Python 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32

def dev_id_search(dev_id, dev_list):
...    if dev_id in dev_list:
...        return ' Device ID found, Dev ID = ' + str(dev_id) + ' Index = ' + str(dev_list.index(dev_id))
...    elif dev_id > max(dev_list):
...        return 'Not Found'
...    else:
...        for i in dev_list:
...            if i > dev_id:
...                return ' Value = ' + str(i) + ' Index = ' + str(dev_list.index(i))
...
L = [10, 20, 30]
dev_id_search(20, L)
' Device ID found, Dev ID = 20 Index = 1'
dev_id_search(20)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: dev_id_search() missing 1 required positional argument: 'dev_list'


Console Output:
>>> def dev_id_search(dev_id, dev_list):
    if dev_id in dev_list:
        return ' Device ID found, Dev ID = ' + str(dev_id) + ' Index = ' + str(dev_list.index(dev_id))
    elif dev_id > max(dev_list):
        return 'Not Found'
    else:
        for i in dev_list:
            if i > dev_id:
                return ' Value = ' + str(i) + ' Index = ' + str(dev_list.index(i))

        
>>> L = [10, 20, 30]
>>> dev_id_search(20, L)
' Device ID found, Dev ID = 20 Index = 1'
>>> dev_id_search(20)
Traceback (most recent call last):
  File "<pyshell#7>", line 1, in <module>
    dev_id_search(20)
TypeError: dev_id_search() missing 1 required positional argument: 'dev_list'
>>> dev_id_search(50, L)
'Not Found'
>>> dev_id_search(50)
Traceback (most recent call last):
  File "<pyshell#9>", line 1, in <module>
    dev_id_search(50)
TypeError: dev_id_search() missing 1 required positional argument: 'dev_list'
>>> 



Using Module:
import assignment1_funcprog as af
while True:
    i = input('Enter ID:')
    i = eval(i)
    L = [10, 20, 30]
    r = af.dev_id_search(i, L)
    print('result = ', r)
    ch = input('Quit? (y/n):')
    if ch == 'y':
        break

Output:
"C:\Python Training\myvenv1\Scripts\python.exe" "C:/Python Training/bin/assigment1_using_module.py"
Enter ID:200
result =  Not Found
Quit? (y/n):n
Enter ID:12
result =   Value = 20 Index = 1
Quit? (y/n):n
Enter ID:10
result =   Device ID found, Dev ID = 10 Index = 0
Quit? (y/n):y

Process finished with exit code 0




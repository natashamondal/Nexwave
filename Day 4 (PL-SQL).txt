SQL> ed
Wrote file afiedt.buf

  1  declare
  2     v_ename emp.ename%type;
  3     v_job v_ename%type;
  4     v_sal emp.sal%type;
  5     V_empno emp.empno%type:=&v_empno;
  6  begin
  7     select ename, job, sal into
  8             v_ename, v_job, v_sal
  9     from emp
 10     where empno=v_empno;
 11     dbms_output.put_line(v_ename || v_job || v_empno);
 12* end;
SQL> /
Enter value for v_empno: 7900
old   5:        V_empno emp.empno%type:=&v_empno;
new   5:        V_empno emp.empno%type:=7900;

PL/SQL procedure successfully completed.

SQL> set serveroutput on
SQL> /
Enter value for v_empno: 7900
old   5:        V_empno emp.empno%type:=&v_empno;
new   5:        V_empno emp.empno%type:=7900;
JAMESCLERK7900

PL/SQL procedure successfully completed.



SQL> set pagesize 120
SQL> set linesize 120
SQL> select * from emp;

     EMPNO ENAME      JOB              MGR HIREDATE         SAL       COMM     DEPTNO
---------- ---------- --------- ---------- --------- ---------- ---------- ----------
      7369 SMITH      CLERK           7902 17-DEC-80        800                    20
      7499 ALLEN      SALESMAN        7698 20-FEB-81       1600        300         30
      7521 WARD       SALESMAN        7698 22-FEB-81       1250        500         30
      7566 JONES      MANAGER         7839 02-APR-81       2975                    20
      7654 MARTIN     SALESMAN        7698 28-SEP-81       1250       1400         30
      7698 BLAKE      MANAGER         7839 01-MAY-81       2850                    30
      7782 CLARK      MANAGER         7839 09-JUN-81       2450                    10
      7788 SCOTT      ANALYST         7566 19-APR-87       3000                    20
      7839 KING       PRESIDENT            17-NOV-81       5000                    10
      7844 TURNER     SALESMAN        7698 08-SEP-81       1500          0         30
      7876 ADAMS      CLERK           7788 23-MAY-87       1100                    20
      7900 JAMES      CLERK           7698 03-DEC-81        950                    30
      7902 FORD       ANALYST         7566 03-DEC-81       3000                    20
      7934 MILLER     CLERK           7782 23-JAN-82       1300                    10

14 rows selected.

SQL> create sequence s1 increment by 1 start with 1 maxvalue 30;

Sequence created.

SQL> select s1.nextval from dual;

   NEXTVAL
----------
         1

SQL> /

   NEXTVAL
----------
         2

SQL> select s1.currval from dual;

   CURRVAL
----------
         2

SQL> declare
  2  v_new_id number;
  3  begin
  4  v_new_id:=s1.nextval;
  5  dbms_output.put_line(v_new_id);
  6  end;
  7  /
4

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin <<outer>>
  2  declare
  3     v_father_name varchar2(20):='Patrick';
  4     v_date_of_birth date:='20-Apr-1972';
  5  begin
  6     declare
  7       v_child_name varchar2(20):='Mike';
  8       v_date_of_birth date:='12-dec_2002';
  9     begin
 10       dbms_output.put_line('Father''s Name: '||v_father_name);
 11       dbms_output.put_line('Date of Birth: '||outer.v_date_of_birth);
 12       dbms_output.put_line('Child''s Name: '||v_child_name);
 13       dbms_output.put_line('Date of Birth: '||v_date_of_birth);
 14     end;
 15  end;
 16* end outer;
SQL> /
Father's Name: Patrick
Date of Birth: 20-APR-72
Child's Name: Mike
Date of Birth: 12-DEC-02

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2    v_myage number:=21;
  3  begin
  4    if v_myage <10 then
  5      dbms_output.put_line('I am a child ');
  6    elsif v_myage <20 then
  7      dbms_output.put_line('I am young ');
  8    elsif v_myage <30 then
  9      dbms_output.put_line('I am in my twenties ');
 10    elsif v_myage <40 then
 11      dbms_output.put_line('I am in my thirties ');
 12    end if;
 13* end;
SQL> /
I am in my twenties

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2    v_counter number:=1;
  3  begin
  4    loop
  5      v_counter:=v_counter+1;
  6      exit when v_counter>=5;
  7      dbms_output.put_line(v_counter);
  8    end loop;
  9* end;
SQL> /
2
3
4

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2    v_counter number:=1;
  3  begin
  4    while v_counter<=10
  5    loop
  6      v_counter:=v_counter+1;
  7      dbms_output.put_line(v_counter);
  8    end loop;
  9* end;
SQL> /
2
3
4
5
6
7
8
9
10
11

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin
  2    for i in 1..10
  3    loop
  4    dbms_output.put_line(i);
  5    end loop;
  6* end;
SQL> /
1
2
3
4
5
6
7
8
9
10

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin
  2    for i in reverse 1..10
  3    loop
  4    dbms_output.put_line(i);
  5    end loop;
  6* end;
SQL> /
10
9
8
7
6
5
4
3
2
1

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin
  2    for i in 1..5 loop
  3    for j in 1..i loop
  4    dbms_output.put('*');
  5    end loop;
  6    dbms_output.put_line(' ');
  7    end loop;
  8* end;
SQL> /
*
**
***
****
*****

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin
  2    for i in reverse 1..5 loop
  3    for j in 1..i loop
  4    dbms_output.put('*');
  5    end loop;
  6    dbms_output.put_line(' ');
  7    end loop;
  8* end;
SQL> /
*****
****
***
**
*

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  v_emp emp%rowtype;
  3  v_empno emp.empno%type:=&v_empno;
  4  begin
  5  select * into v_emp
  6  from emp
  7  where empno=v_empno;
  8  dbms_output.put_line(v_emp.ename||' '||v_emp.sal);
  9* end;
SQL> /
Enter value for v_empno: 7900
old   3: v_empno emp.empno%type:=&v_empno;
new   3: v_empno emp.empno%type:=7900;
JAMES 950

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2      v_emp emp%rowtype;
  3      v_empno emp.empno%type:=&v_empno;
  4      begin
  5      select * into v_emp
  6      from emp
  7      where empno=v_empno;
  8      insert into t9 values(v_emp.sal,v_emp.ename);
  9      dbms_output.put_line(v_emp.ename||' '||v_emp.sal);
 10*    end;
SQL> /
Enter value for v_empno: 7900
old   3:     v_empno emp.empno%type:=&v_empno;
new   3:     v_empno emp.empno%type:=7900;
JAMES 950

PL/SQL procedure successfully completed.

SQL> select * from t9;

     REGNO NAME
---------- ----------
       950 JAMES


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  cursor c1 is select ename,sal from emp
  3  where deptno=10;
  4  v_name emp.ename%type;
  5  v_sal emp.sal%type;
  6  begin
  7  open c1;
  8  loop
  9  fetch c1 into v_name, v_sal;
 10  exit when c1%notfound;
 11  dbms_output.put_line(v_name||v_sal);
 12  end loop;
 13  close c1;
 14* end;
SQL> /
CLARK2450
KING5000
MILLER1300

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  cursor c1 is select * from emp
  3  where deptno=10;
  4  v_emprec emp%rowtype;
  5  begin
  6  open c1;
  7  loop
  8  fetch c1 into v_emprec;
  9  exit when c1%notfound;
 10  dbms_output.put_line(v_emprec.ename||' '||v_emprec.sal||' '||v_emprec.job);
 11  end loop;
 12  close c1;
 13* end;
SQL> /
CLARK 2450 MANAGER
KING 5000 PRESIDENT
MILLER 1300 CLERK

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1   declare
  2   cursor c1 is select * from emp
  3   where deptno=10;
  4   v_emprec emp%rowtype;
  5   begin
  6   if not c1%isopen then
  7   open c1;
  8   end if;
  9   loop
 10   fetch c1 into v_emprec;
 11   exit when c1%notfound and c1%rowcount>=1;
 12   dbms_output.put_line(v_emprec.ename||' '||v_emprec.sal||' '||v_emprec.job);
 13   end loop;
 14   close c1;
 15* end;
SQL> /
CLARK 2450 MANAGER
KING 5000 PRESIDENT
MILLER 1300 CLERK

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  cursor c1 is select empno, hiredate from emp
  3  where deptno=10;
  4  begin
  5  for i in c1
  6  loop
  7  dbms_output.put_line(i.empno||' '||i.hiredate);
  8  end loop;
  9* end;
SQL> /
7782 09-JUN-81
7839 17-NOV-81
7934 23-JAN-82

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  begin
  2  for i in(select empno, hiredate from emp
  3  where deptno=10)
  4  loop
  5  dbms_output.put_line(i.empno||' '||i.hiredate);
  6  end loop;
  7* end;
SQL> /
7782 09-JUN-81
7839 17-NOV-81
7934 23-JAN-82

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  cursor c1(v_deptno number, v_job varchar2) is select * from emp
  3  where deptno=v_deptno
  4  and job=v_job;
  5  v_emprec emp%rowtype;
  6  begin
  7  if not c1%isopen then
  8  open c1(&v_deptno,'&v_job');
  9  end if;
 10  loop
 11  fetch c1 into v_emprec;
 12  exit when c1%notfound;
 13  dbms_output.put_line(v_emprec.ename||v_emprec.sal||v_emprec.job);
 14  end loop;
 15  close c1;
 16* end;

SQL> /
Enter value for v_deptno: 10
Enter value for v_job: CLERK
old   8: open c1(&v_deptno,'&v_job');
new   8: open c1(10,'CLERK');
MILLER1300CLERK

PL/SQL procedure successfully completed.


SQL> ED
Wrote file afiedt.buf

  1  declare
  2  v_deptno emp.deptno%type:=&v_deptno;
  3  v_ename emp.ename%type;
  4  begin
  5  select ename into v_ename
  6  from emp
  7  where deptno=v_deptno;
  8  exception
  9  when too_many_rows then
 10  dbms_output.put_line('many rows');
 11  when no_data_found then
 12  dbms_output.put_line('no value');
 13* end;
SQL> /
Enter value for v_deptno: 1
old   2: v_deptno emp.deptno%type:=&v_deptno;
new   2: v_deptno emp.deptno%type:=1;
no value

PL/SQL procedure successfully completed.

SQL> /
Enter value for v_deptno: 10
old   2: v_deptno emp.deptno%type:=&v_deptno;
new   2: v_deptno emp.deptno%type:=10;
many rows

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  v_deptno emp.deptno%type:=&v_deptno;
  3  v_ename emp.ename%type;
  4  begin
  5  select ename into v_ename
  6  from emp
  7  where deptno=v_deptno;
  8  exception
  9  /*when too_many_rows then
 10  dbms_output.put_line('many rows');
 11  when no_data_found then
 12  dbms_output.put_line('no value'); */
 13  when others then
 14  dbms_output.put_line('an error has occured');
 15* end;
SQL> /
Enter value for v_deptno: 1
old   2: v_deptno emp.deptno%type:=&v_deptno;
new   2: v_deptno emp.deptno%type:=1;
an error has occured

PL/SQL procedure successfully completed.

SQL> /
Enter value for v_deptno: 10
old   2: v_deptno emp.deptno%type:=&v_deptno;
new   2: v_deptno emp.deptno%type:=10;
an error has occured

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  v_deptno emp.deptno%type:=&v_deptno;
  3  v_ename emp.ename%type;
  4  begin
  5  select ename into v_ename
  6  from emp
  7  where deptno=v_deptno;
  8  exception
  9  /*when too_many_rows then
 10  dbms_output.put_line('many rows');
 11  when no_data_found then
 12  dbms_output.put_line('no value'); */
 13  when others then
 14  dbms_output.put_line(SQLERRM);
 15* end;
SQL> /
Enter value for v_deptno: 1
old   2: v_deptno emp.deptno%type:=&v_deptno;
new   2: v_deptno emp.deptno%type:=1;
ORA-01403: no data found

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  e1 exception;
  3  pragma exception_init(e1,-02292);
  4  begin
  5  delete from dept
  6  where deptno=10;
  7  exception
  8  when e1 then
  9  dbms_output.put_line('you can not delete the parent table');
 10* end;
SQL> /
you can not delete the parent table

PL/SQL procedure successfully completed.


SQL> ed
Wrote file afiedt.buf

  1  declare
  2  e1 exception;
  3  pragma exception_init(e1,-01400);
  4  begin
  5  insert into dept(deptno,dname) values (null,'SALES');
  6  exception
  7  when e1 then
  8  dbms_output.put_line('insert operation failed');
  9  dbms_output.put_line(SQLERRM);
 10* end;
SQL> /
insert operation failed
ORA-01400: cannot insert NULL into ("SCOTT"."DEPT"."DEPTNO")

PL/SQL procedure successfully completed.